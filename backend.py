import pickle

file = open('learnModel.pickle', 'rb')

models = pickle.load(file)  # {'plid': model}

file.close()

quarter_ohe = {'Q1':[1,0,0,0],'Q2':[0,1,0,0],'Q3':[0,0,1,0],'Q4':[0,0,0,1]}
month_ohe = {'JAN':[0,0,0,0,0,1,0,0,0,0,0,0],'FEB':[0,0,0,0,0,0,1,0,0,0,0,0],'MAR':[0,0,0,0,0,0,0,1,0,0,0,0],'APR':[0,0,0,0,0,0,0,0,1,0,0,0],
	'MAY':[0,0,0,0,0,0,0,0,0,1,0,0],'JUN':[0,0,0,0,0,0,0,0,0,0,1,0],'JUL':[0,0,0,0,0,0,0,0,0,0,0,1],'AUG':[1,0,0,0,0,0,0,0,0,0,0,0],
	'SEP':[0,1,0,0,0,0,0,0,0,0,0,0],'OCT':[0,0,1,0,0,0,0,0,0,0,0,0],'NOV':[0,0,0,1,0,0,0,0,0,0,0,0],'DEC':[0,0,0,0,1,0,0,0,0,0,0,0]}

plid_encodings = {'8201-SYS': 0, '88-LC0-36FH': 1, '8800-LC-36FH': 2, '8800-LC-48H': 3, '8808-FC': 4, '8808-SYS': 5, '8812-SYS': 6, '8818-SYS': 7, 'A900-IMA-8Z': 8, 'A99-32X100GE-X-SE': 9, 'A9K-24X10GE-1G-TR': 10, 'A9K-8X100GE-TR': 11, 'A9K-920-12CZ-A': 12, 'A9K-920-12SZ-IM': 13, 'A9K-920-4SZ-D': 14, 'A9K-9901': 15, 'A9K-9903': 16, 'A9K-RSP5-SE': 17, 'A9K-RSP5-TR': 18, 'A9K-RSP880-SE': 19, 'A9K-RSP880-TR': 20, 'A9K1000-ESP100': 21, 'A9K1001-HX': 22, 'A9K1001-X': 23, 'A9K1002-HX': 24, 'C1000-24T-4G-L': 25, 'C1000-48T-4G-L': 26, 'C1111-4P': 27, 'C1111-8P': 28, 'C1111-8PLTExA': 29, 'C1116-4P': 30, 'C1121-8P': 31, 'C8200-1N-4T': 32, 'C8200L-1N-4T': 33, 'C8300-1N1S-6T': 34, 'C8300-2N2S-4T2X': 35, 'C8300-2N2S-6T': 36, 'C8500-12X': 37, 'C8500-12X4QC': 38, 'C8500L-8S4X': 39, 'C9105AXI-B': 40, 'C9105AXW-B': 41, 'C9115AXE-B': 42, 'C9115AXI-B': 43, 'C9120AXE-B': 44, 'C9120AXI-B': 45, 'C9130AXE-B': 46, 'C9130AXI-B': 47, 'C9200-24T-E': 48, 'C9200-48P-A': 49, 'C9200-48P-E': 50, 'C9200-48PXG-E': 51, 'C9200-48T-E': 52, 'C9200L-24P-4G-E': 53, 'C9200L-24P-4X-E': 54, 'C9200L-24T-4G-E': 55, 'C9200L-24T-4X-E': 56, 'C9200L-48P-4G-E': 57, 'C9200L-48P-4X-E': 58, 'C9200L-48PL-4X-E': 59, 'C927-4P': 60, 'C9300-24P': 61, 'C9300-24S': 62, 'C9300-24T': 63, 'C9300-24UX': 64, 'C9300-48H': 65, 'C9300-48P': 66, 'C9300-48S': 67, 'C9300-48T': 68, 'C9300-48UN': 69, 'C9300-48UXM': 70, 'C9300-NM-8X': 71, 'C9300L-24T-4X-A': 72, 'C9300L-48P-4G-E': 73, 'C9300L-48P-4X-A': 74, 'C9300L-48P-4X-E': 75, 'C9300L-48UXG-4X-A': 76, 'C9300X-12Y': 77, 'C9300X-24Y': 78, 'C9400-LC-48U': 79, 'C9400-LC-48UX': 80, 'C9400-PWR-3200AC': 81, 'C9400-SUP-1': 82, 'C9400-SUP-1XL': 83, 'C9400-SUP-1XL-Y': 84, 'C9407R-96U-BNDL-E': 85, 'C9410R-96U-BNDL-A': 86, 'C9500-24Y4C': 87, 'C9500-40X': 88, 'C9500-48Y4C': 89, 'C9600-SUP-1': 90, 'C9606R': 91, 'C9800-40-K9': 92, 'C9K-F1-SSD-240G': 93, 'CBR-D121-DS-MOD': 94, 'CBR-D31-US-MOD': 95, 'CP-7821-K9': 96, 'CP-7841-K9': 97, 'CP-8811-K9': 98, 'CP-8821-K9-BUN': 99, 'CP-8841-3PCC-K9': 100, 'CP-8841-K9': 101, 'CP-8845-K9': 102, 'CP-8851-K9': 103, 'CP-8861-K9': 104, 'CP-8865-3PCC-K9': 105, 'CP-8865-K9': 106, 'CPAK-100G-LR4': 107, 'CS-CODEC-PLUS+': 108, 'CS-CODEC-PRO+': 109, 'CS-DESK-K9': 110, 'CS-DESKPRO-K9': 111, 'CS-KIT-K9': 112, 'CS-KIT-MINI-K9': 113, 'CS-QUADCAM+': 114, 'CS-R55-UNI2-K9+': 115, 'CS-T10-TS+': 116, 'CTS-CAM-P60+': 117, 'DN2-CPU-I6238': 118, 'DN2-CPU-I8276': 119, 'DN2-SD19T61X-EV': 120, 'DS-C9148T-K9': 121, 'DS-C9396T-K9': 122, 'DS-SFP-FC32G-SW': 123, 'DS-X9648-1536K9': 124, 'FPR1010-NGFW-K9': 125, 'FPR4115-NGFW-K9': 126, 'GLC-TE': 127, 'HX-CPU-I6258R': 128, 'HX-SD38T61X-EV': 129, 'IE-4000-8T4G-E': 130, 'IE-4010-16S12P': 131, 'ISR4321/K9': 132, 'ISR4331/K9': 133, 'ISR4351/K9': 134, 'ISR4431/K9': 135, 'ISR4451-X/K9': 136, 'N3K-C3432D-S': 137, 'N540-24Z8Q2C-SYS': 138, 'N540-ACC-SYS': 139, 'N540-PWR400-D': 140, 'N540X-12Z16G-SYS-D': 141, 'N540X-6Z18G-SYS-A': 142, 'N540X-6Z18G-SYS-D': 143, 'N560-4-RSP4': 144, 'N560-4-SYS': 145, 'N9K-C92348GC-X': 146, 'N9K-C93108TC-FX': 147, 'N9K-C93108TC-FX3P': 148, 'N9K-C93180YC-FX3': 149, 'N9K-C93240YC-FX2': 150, 'N9K-C93360YC-FX2': 151, 'N9K-C9336C-FX2': 152, 'N9K-C9348GC-FXP': 153, 'N9K-C93600CD-GX': 154, 'N9K-C9364C': 155, 'N9K-C9364C-GX': 156, 'N9K-C9508': 157, 'N9K-C9508-FM-E2': 158, 'N9K-C9508-FM-G': 159, 'N9K-X97160YC-EX': 160, 'N9K-X9736C-FX': 161, 'NC-57-36H-SE': 162, 'NC-57-36H6D-S': 163, 'NC55-36X100G-A-SE': 164, 'NC55-5504-FC2': 165, 'NC55-5508-FC2': 166, 'NC6-20X100GE-M-C': 167, 'NCS-5501-SE': 168, 'NCS-5504-SYS': 169, 'NCS-5508': 170, 'NCS-55A1-24Q6H-SS': 171, 'NCS-55A1-36H-SE-S': 172, 'NCS-55A1-36H-SYS': 173, 'NCS-55A2-MOD-SYS': 174, 'NCS-55A2-MODS-SYS': 175, 'NCS-57C3-MOD-SYS': 176, 'NCS-57C3-MODS-SYS': 177, 'NCS1001-K9': 178, 'NCS1K4-1.2T-K9': 179, 'NCS1K4-1.2TL-K9': 180, 'NCS2015-SA-DC': 181, 'NCS2K-16-AD-CCOFS=': 182, 'NCS2K-400G-XP=': 183, 'NCS2K-TNCS-2O-K9': 184, 'NCS4202-SA': 185, 'NCS4K-4H-OPW-LO': 186, 'NIM-24A': 187, 'ONS-CFP2-WDM=': 188, 'P-LTEA-EA': 189, 'QDD-400G-FR4-S': 190, 'QDD-4X100G-FR-S': 191, 'QSFP-100G-AOC3M': 192, 'QSFP-100G-CWDM4-S': 193, 'QSFP-100G-DR-S': 194, 'QSFP-100G-ER4L-S': 195, 'QSFP-100G-LR4-S': 196, 'QSFP-100G-SM-SR': 197, 'QSFP-40/100-SRBD': 198, 'QSFP-40G-SR-BD': 199, 'SFP-10/25G-CSR-S': 200, 'SFP-10G-LR': 201, 'SFP-10G-LR-S': 202, 'SFP-25G-SR-S': 203, 'UCS-CPU-A7702': 204, 'UCS-CPU-A7763': 205, 'UCS-CPU-I6226': 206, 'UCS-CPU-I6226R': 207, 'UCS-CPU-I6230': 208, 'UCS-CPU-I6234': 209, 'UCS-CPU-I6238R': 210, 'UCS-CPU-I6240': 211, 'UCS-CPU-I6240R': 212, 'UCS-CPU-I6246': 213, 'UCS-CPU-I6248R': 214, 'UCS-CPU-I6252': 215, 'UCS-CPU-I6338N': 216, 'UCS-CPU-I6346': 217, 'UCS-CPU-I6348': 218, 'UCS-CPU-I6354': 219, 'UCS-CPU-I8260': 220, 'UCS-CPU-I8268': 221, 'UCS-CPU-I8276L': 222, 'UCS-CPU-I8280L': 223, 'UCS-CPU-I8352Y': 224, 'UCS-CPU-I8358': 225, 'UCS-CPU-I8368': 226, 'UCS-CPU-I8380': 227, 'UCS-FI-6454': 228, 'UCS-M2-240GB': 229, 'UCS-ML-128G4RT-H': 230, 'UCS-ML-128G4RW': 231, 'UCS-ML-X64G4RT-H': 232, 'UCS-MR-X16G1RW': 233, 'UCS-MR-X32G2RS-H=': 234, 'UCS-MR-X32G2RT-H': 235, 'UCS-MR-X32G2RW': 236, 'UCS-MR-X64G2RT-H': 237, 'UCS-MR-X64G2RW': 238, 'UCS-MR-X64G4RS-H=': 239, 'UCS-S3260-HDW18T': 240, 'UCSB-B200-M5': 241, 'UCSC-C220-M5SX': 242, 'UCSC-C240-M5SX': 243, 'UCSC-C240-M6SX': 244, 'UCSC-GPU-T4-16': 245, 'UCSX-210C-M6': 246, 'VEDGE-2000-AC-K9': 247, 'WS-C3560CX-12PC-S': 248, 'WS-C3650-48FQM': 249}

def encode(p, q, m, y):
	upq = quarter_ohe[q]
	upm = month_ohe[m]
	encodings = upm, upq
	return upm+upq+[plid_encodings[p]]+[y]

def predict(plid, quarter, month, year):
	model, acc = models[plid]
	print(acc)
	return model.predict([encode(plid, quarter, month, year)])

if __name__ == '__main__':
	predict('8201-SYS', 'Q3', 'JAN', 2013)
